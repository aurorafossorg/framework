image: aurorafossorg/archlinux:latest

stages:
  - check
  - build
  - test
  - production
  - deploy

# Style checker
codestyle:
  stage: check
  image: aurorafossorg/dlang:latest
  script: dscanner -S .

# Syntax check before compilation
syntax_check:
  stage: check
  image: aurorafossorg/dlang:latest
  script: dscanner -s .

# Indentation check according to editorconfig file
editorconfig:
  stage: check
  image: node:latest
  cache:
    paths:
      - node_modules/
  script:
    - npm install eclint
    - npx eclint check "src/**/*.d" "*.json" "**/meson.build" "*.yml"

# Artifacts template
.artifacts_template: &artifacts_definition
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - .out/bin/

# dub template
.linux-dub_template: &linux-dub_definition
  cache:
    paths:
      - .dub/
  image: aurorafossorg/dlang:latest
  script:
    - ./tools/dub.sh $BUILD_DUB_FLAGS

.x86_64-linux-deps_template: &x86_64-linux-deps_definition
  before_script:
    - pacman -Sy libsndfile --noconfirm

.x86-linux-deps_template: &x86-linux-deps_definition
  before_script:
    - pacman -Sy lib32-libsndfile --noconfirm

x86_64-linux-dub-dmd-debug:
  stage: build
  <<: *artifacts_definition
  <<: *linux-dub_definition
  <<: *x86_64-linux-deps_definition
  variables:
    BUILD_DUB_FLAGS: $CI_JOB_STAGE --arch=x86_64 --compiler=dmd --build=debug

x86-linux-dub-dmd-debug:
  stage: build
  <<: *artifacts_definition
  <<: *linux-dub_definition
  <<: *x86-linux-deps_definition
  variables:
    BUILD_DUB_FLAGS: $CI_JOB_STAGE --arch=x86 --compiler=dmd --build=debug

x86_64-linux-dub-ldc-debug:
  <<: *artifacts_definition
  <<: *linux-dub_definition
  <<: *x86_64-linux-deps_definition
  stage: build
  variables:
    BUILD_DUB_FLAGS: $CI_JOB_STAGE --arch=x86_64 --compiler=ldc --build=debug

x86-linux-dub-ldc-debug:
  <<: *artifacts_definition
  <<: *linux-dub_definition
  <<: *x86-linux-deps_definition
  stage: build
  variables:
    BUILD_DUB_FLAGS: $CI_JOB_STAGE --arch=x86 --compiler=ldc --build=debug

x86_64-linux-dub-gdcd-debug:
  <<: *artifacts_definition
  <<: *linux-dub_definition
  <<: *x86_64-linux-deps_definition
  stage: build
  variables:
    BUILD_DUB_FLAGS: $CI_JOB_STAGE --arch=x86_64 --compiler=gdc --build=debug
  allow_failure: true

x86-linux-dub-gdc-debug:
  <<: *artifacts_definition
  <<: *linux-dub_definition
  <<: *x86-linux-deps_definition
  stage: build
  variables:
    BUILD_DUB_FLAGS: $CI_JOB_STAGE --arch=x86 --compiler=gdc --build=debug
  allow_failure: true

# Build and test all examples
examples:
  <<: *x86_64-linux-deps_definition
  stage: test
  artifacts:
    name: "$CI_JOB_NAME"
    paths:
      - examples/.out/bin/
  cache:
    paths:
      - .dub/
  image: aurorafossorg/dlang:latest
  script:
    - ./tools/do-examples.sh

unittests:
  stage: test
  <<: *artifacts_definition
  <<: *linux-dub_definition
  <<: *x86_64-linux-deps_definition
  variables:
    BUILD_DUB_FLAGS: $CI_JOB_STAGE --build=unittest

code_coverage:
  <<: *linux-dub_definition
  <<: *x86_64-linux-deps_definition
  stage: test
  variables:
    BUILD_DUB_FLAGS: $CI_JOB_STAGE --build=unittest-cov --coverage
  after_script:
    - bash <(curl -s https://codecov.io/bash)

x86_64-linux-dub-ldc-release:
  <<: *artifacts_definition
  <<: *linux-dub_definition
  <<: *x86_64-linux-deps_definition
  stage: production
  variables:
    BUILD_DUB_FLAGS: build --arch=x86_64 --compiler=ldc --build=release

x86-linux-dub-ldc-release:
  <<: *artifacts_definition
  <<: *linux-dub_definition
  <<: *x86-linux-deps_definition
  stage: production
  variables:
    BUILD_DUB_FLAGS: build --arch=x86 --compiler=ldc --build=release

x86_64-linux-dub-dmd-release:
  <<: *artifacts_definition
  <<: *linux-dub_definition
  <<: *x86_64-linux-deps_definition
  stage: production
  variables:
    BUILD_DUB_FLAGS: build --arch=x86_64 --compiler=dmd --build=release

x86-linux-dub-dmd-release:
  <<: *artifacts_definition
  <<: *linux-dub_definition
  <<: *x86-linux-deps_definition
  stage: production
  variables:
    BUILD_DUB_FLAGS: build --arch=x86 --compiler=dmd --build=release
